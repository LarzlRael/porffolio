{"version":3,"sources":["context/ThemeContext.tsx","context/themeColors.tsx","styles/mediaQuery.tsx","components/Layouts/Switch.tsx","context/langContext.tsx","components/LinksMenuNavigation.tsx","hooks/useWindowsSize.tsx","components/Layouts/Header.tsx","components/WhoAmIm.tsx","components/GridItem.tsx","data/dataTec.tsx","components/TecnologiesGrids.tsx","components/MyProjects.tsx","components/FormContact.tsx","components/Footer.tsx","components/Layouts/Layout.tsx","App.tsx","index.tsx"],"names":["ThemeContext","createContext","ThemeProvider","themeState","children","localStorage","getItem","document","body","classList","add","remove","useState","darkTheme","setDarkTheme","toogleMenu","SetToogleMenu","Provider","value","changeTheme","setItem","JSON","stringify","ChangeToogleMenu","sizeDesktop","lightColorsTheme","primaryColor","backgroundGrids","background","titleColor","darkColorsTheme","sm","md","lg","sizeMedia","media","Switch","useContext","activeSwich","setActiveSwich","ContainerSwitch","StyledSwith","className","onClick","themeColors","styled","div","LangContext","LangProvider","MessagesEng","mensajes","setmensajes","locale","setLocale","changeLan","lan","MessagesES","messages","onError","LinksMenuNavigation","size","width","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","linkClickeable","LinkContainer","href","id","Header","HeaderContainer","BoxHeaderTitle","src","alt","color","NamePresentation","ProfileImage","blackTheme","WhoAmIm","WhoIamContainer","GridItem","imageRoute","name","GridTec","style","place","effect","InfoGridsTec","TecnologiesGrids","TecContainer","map","info","uuidv4","GridContainer","GridContainerSytyle","MyProjects","MyProjectsStyles","MyProjectsGrid","WorkGridContainer","WorksOneGrid","WorksOneGridContainer","ContainerImage","img","FormContact","intl","useIntl","onSubmit","e","preventDefault","type","placeholder","formatMessage","SocialGridData","logoSource","Footer","FooterContainer","SocialMediaContainer","social","target","SocialGrid","footer","Layout","MainLayout","App","BackGroundColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c2deb39.chunk.js","sourcesContent":["import { useState, createContext } from 'react';\n\n\ntype AuthContexsProps = {\n    changeTheme: () => void;\n    darkTheme: boolean;\n    toogleMenu: boolean;\n    ChangeToogleMenu: () => void;\n}\n\nconst ThemeContext = createContext({} as AuthContexsProps);\n\n\nconst ThemeProvider = ({ children }: any) => {\n\n    let themeState: boolean;\n    if (localStorage.getItem('dark-mode') === 'true') {\n        document.body.classList.add('dark');\n        themeState = true;\n    } else {\n        document.body.classList.remove('dark');\n        themeState = false;\n    }\n\n    const [darkTheme, setDarkTheme] = useState(themeState);\n    const [toogleMenu, SetToogleMenu] = useState(true);\n\n\n    const changeTheme = () => {\n        setDarkTheme(!darkTheme);\n        localStorage.setItem('dark-mode', JSON.stringify(!darkTheme));\n    }\n    const ChangeToogleMenu = () => {\n        SetToogleMenu(!toogleMenu);\n    }\n    return (\n        <ThemeContext.Provider\n            value={{\n                changeTheme,\n                darkTheme,\n                toogleMenu,\n                ChangeToogleMenu\n            }}\n        >\n            {children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport { ThemeProvider, ThemeContext }","\nexport interface ThemeColors {\n    primaryColor: string;\n    backgroundGrids: string;\n    background: string;\n    titleColor: string;\n}\nexport const sizeDesktop = '1000px';\n\nexport const lightColorsTheme = {\n    primaryColor: '#21897e',\n    backgroundGrids: '#F2F2F2',\n    background: '#fff',\n    titleColor: '#000',\n}\n\n\nexport const darkColorsTheme = {\n    primaryColor: '#8980f5',\n    backgroundGrids: '#303030',\n    background: '#333333',\n    titleColor: '#fff',\n}","\nconst sm = '360px';\nconst md = '768px';\nconst lg = '1024px';\n\n\n\nexport const sizeMedia = (media: string): string => {\n    /*  \n    @media ${sizeMedia('xs')} {\n         padding-top: 1rem;\n     }\n    */\n    switch (media) {\n        case 'xs':\n            return `( max-width: ${sm} )`\n        case 'sm':\n            return `( min-width: ${sm}) and (max-width: ${md} )`\n        case 'md':\n            return `( min-width: ${md}) and (max-width: ${lg} )`\n        case 'lg':\n            return `( min-width: ${lg} )`\n        default:\n            return `( min-width: ${lg} )`\n    }\n}\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { darkColorsTheme, lightColorsTheme, ThemeColors } from '../../context/themeColors';\nimport { sizeMedia } from '../../styles/mediaQuery';\n\nexport const Switch = () => {\n\n\tconst { darkTheme, changeTheme } = useContext(ThemeContext);\n\tconst [activeSwich, setActiveSwich] = useState(false);\n\n\tconst swithChangeTheme = () => {\n\t\tchangeTheme();\n\t\tsetActiveSwich(!activeSwich)\n\t};\n\n\treturn (\n\t\t<ContainerSwitch>\n\t\t\t<StyledSwith\n\t\t\t\tclassName={activeSwich ? 'active' : ''}\n\t\t\t\tonClick={swithChangeTheme}\n\t\t\t\tthemeColors={darkTheme ? darkColorsTheme : lightColorsTheme}\n\t\t\t>\n\t\t\t\t<span><i className=\"fas fa-sun\"></i></span>\n\t\t\t\t<span><i className=\"fas fa-moon\"></i></span>\n\t\t\t</StyledSwith>\n\t\t</ContainerSwitch>\n\t)\n}\n\nconst ContainerSwitch = styled.div`\n    width: 55px;\n    position:absolute;\n    right: 0;\n`;\n\nconst StyledSwith = styled.div<{\n\n\tthemeColors: ThemeColors;\n}>`\n    bottom: 0;\n    right: 0;\n    \n\tbackground: #343d58;\n\tborder-radius: 100px;\n\tborder: none;\n\tposition: relative;\n\tcursor: pointer;\n\tdisplay: flex;\n\toutline: none;\n\t\n\t&::after {\n\t\tcontent: \"\";\n\t\tdisplay: block;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tposition: absolute;\n\t\tbackground: ${({ themeColors }) => themeColors.primaryColor};\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: unset;\n\t\tborder-radius: 100px;\n\t\ttransition: 0.3s ease all;\n\t\tbox-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.2);\n\t}\n\t&.active {\n\t\tbackground: #fff;\n\t\tcolor: #000;\n\t\t&::after {\n\t\t\tright: 0;\n\t\t\tleft: unset;\n\t\t}\n\t}\n\tspan {\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tline-height: 30px;\n\t\tdisplay: block;\n\t\tbackground: none;\n\t\tcolor: #fff;\n\t}\n\t@media ${sizeMedia('sm')} {\n        margin :2rem 0;\n    }\n\n`;","import React, { useState, createContext } from 'react'\nimport { IntlProvider } from 'react-intl';\n\nimport MessagesEng from '../locales/en-Us.json';\nimport MessagesES from '../locales/es-Es.json';\n\ntype AuthContexsProps = {\n    mensajes: any;\n    locale: string;\n    changeLan: (lan: string) => void;\n}\nconst LangContext = createContext({} as AuthContexsProps);\n\n\nconst LangProvider = ({ children }: any) => {\n\n    const [mensajes, setmensajes] = useState(MessagesEng);\n    const [locale, setLocale] = useState('es-ES')\n\n    const changeLan = (lan: string) => {\n\n        switch (lan) {\n            case 'en-US':\n                setmensajes(MessagesES)\n                setLocale('es-ES')\n                break;\n            case 'es-ES':\n                setmensajes(MessagesEng)\n                setLocale('en-US')\n                break;\n            default:\n                setmensajes(MessagesEng)\n                setLocale('es-ES')\n                break;\n        }\n    }\n    return (\n        <LangContext.Provider\n            value={{\n                mensajes,\n                locale,\n                changeLan\n            }}>\n            <IntlProvider\n                locale={locale}\n                messages={mensajes}\n                onError={() => null}>\n\n                {children}\n\n            </IntlProvider>\n        </LangContext.Provider>\n    )\n}\n\nexport { LangProvider, LangContext }","\nimport { useContext } from 'react'\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../context/ThemeContext';\nimport { ThemeColors, lightColorsTheme, darkColorsTheme } from '../context/themeColors';\nimport { sizeMedia } from '../styles/mediaQuery';\nimport { useWindowSize } from '../hooks/useWindowsSize';\n\n\nexport const LinksMenuNavigation = () => {\n\n    const { darkTheme, toogleMenu, ChangeToogleMenu } = useContext(ThemeContext);\n\n    const size = useWindowSize();\n\n    const linkClickeable = () => {\n        if (size.width <= 768) {\n            ChangeToogleMenu();\n        }\n    }\n\n    return (\n\n\n\n        <LinkContainer\n            className={toogleMenu ? 'menu-active' : 'menu-desactive'}\n            darkTheme={darkTheme}\n            themeColors={!darkTheme ?\n                lightColorsTheme :\n                darkColorsTheme}\n        >\n\n            <a\n                href=\"#home\"\n                onClick={() => linkClickeable()}\n            >\n                <FormattedMessage\n                    id=\"app.home\" />\n            </a>\n            <a\n                onClick={() => linkClickeable()}\n                href=\"#tecnologies\">\n                <FormattedMessage\n                    id=\"app.technologies\" />\n            </a>\n            <a\n                onClick={() => linkClickeable()}\n                href=\"#projects\">\n                <FormattedMessage\n                    id=\"app.projects\" />\n            </a>\n            <a\n                onClick={() => linkClickeable()}\n                href=\"#contact\">\n                <FormattedMessage\n                    id=\"app.contact\" />\n            </a>\n        </LinkContainer>\n\n    )\n};\n\nconst LinkContainer = styled.div<{\n    darkTheme: boolean;\n    themeColors: ThemeColors;\n}>`\n    a{\n        color:white;\n        margin-left: 30px;\n        font-family:'Open Sans';\n    }\n    @media ${sizeMedia('xs')} {\n        transition: .3s ease all;\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n        z-index:100;\n        justify-content: space-around;\n        background: ${({ themeColors }) => themeColors.primaryColor};\n        align-items: center;\n        opacity: 0.9;\n        left: 0;\n        top: 0;\n    }\n    @media ${sizeMedia('sm')} {\n        width: 100vw;\n        height: 100vh;\n        transition: .3s ease all;\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        z-index:100;\n        justify-content: space-around;\n        background: ${({ themeColors }) => themeColors.primaryColor};\n        align-items: center;\n        opacity: 0.9;\n        left: 0;\n        top: 0;\n    }\n`;","import { useState, useEffect } from 'react';\nexport const useWindowSize = () => {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    \n    return windowSize;\n}","import { useContext } from 'react'\nimport styled from 'styled-components';\n\nimport { Menu } from 'react-ionicons';\n\n\nimport { Switch } from './Switch';\nimport { FormattedMessage } from 'react-intl';\nimport { LangContext } from '../../context/langContext';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { LinksMenuNavigation } from '../LinksMenuNavigation';\nimport { sizeMedia } from '../../styles/mediaQuery';\nimport { sizeDesktop } from '../../context/themeColors';\n\n\nexport const Header = () => {\n\n    const { changeLan } = useContext(LangContext);\n    const { darkTheme, ChangeToogleMenu } = useContext(ThemeContext);\n\n    return (\n\n        <HeaderContainer>\n            <BoxHeaderTitle>\n                <div className=\"flagsContainer\">\n\n                    <div className=\"flags-groups\">\n                        <img\n                            className=\"pointer\"\n                            onClick={() => changeLan('es-ES')}\n                            src=\"/enFlag.png\" alt=\"en flag\" />\n                        <img\n                            className=\"pointer\"\n                            onClick={() => changeLan('en-US')}\n                            src=\"/esFlag.png\" alt=\"es Flag\" />\n                    </div>\n\n                    <div\n                        className=\"menuicon\"\n                        onClick={ChangeToogleMenu}\n                    >\n                        <Menu\n                            color={'#FFFFFF'}\n                            height=\"45px\"\n                            width=\"45px\"\n                        />\n                    </div>\n                </div>\n\n                <LinksMenuNavigation />\n\n            </BoxHeaderTitle>\n\n            <NamePresentation>\n                <h2>Reynaldo Larz</h2>\n                <h3>\n                    <FormattedMessage\n                        id=\"app.job\"\n                    />\n                </h3>\n            </NamePresentation>\n            <Switch />\n            <ProfileImage size={150} blackTheme={darkTheme} >\n                <img\n                    src=\"https://i.redd.it/v0caqchbtn741.jpg\" alt=\"porifle\" />\n            </ProfileImage>\n\n        </HeaderContainer>\n    )\n\n}\n\nconst BoxHeaderTitle = styled.div`\n    display:flex;\n    justify-content: space-between;\n    padding-top: 3rem;\n    align-content:center;\n    align-items:center;\n    @media ${sizeMedia('xs')} {\n        padding-top: 1rem;\n    }\n`;\n\nconst HeaderContainer = styled.div`\n    width: ${sizeDesktop};\n    height: 450px;\n    margin:auto;\n    position:relative;\n    scroll-behavior: smooth;    \n    @media ${sizeMedia('xs')} {\n        width: 100%;\n    }\n    @media ${sizeMedia('sm')} {\n        width: 100%;\n    }\n    \n`;\n\n\nconst NamePresentation = styled.div`\n    margin:auto ;\n    margin-top: 70px;\n    color: white;\n    display:flex;\n    flex-direction: column;\n    justify-content:center;\n    align-items:center;\n    border-radius: 5px;\n    padding: 25px;\n    width: 450px;\n    border: 2px solid #fff;\n    \n    text-align: center;\n\n    @media ${sizeMedia('sm')} {\n        width: 90%;\n        padding: 1rem;\n        h2{\n            font-size: 36px;\n        }\n        h3{\n            font-size: 18px;\n        }\n    }\n\n    h2{\n        margin-top: 0;\n        margin-bottom: 0;\n        font-size: 48px;\n        margin-bottom: 1rem;\n        \n    }\n    h3{\n        margin-top: 0;\n        margin-bottom: 0;\n        font-size: 24px;\n\n    }\n`;\n\nconst ProfileImage = styled.div<{\n    size: number,\n    blackTheme: boolean,\n}>`\n    \n    width: ${({ size }) => size + 'px'} ;\n    height: ${({ size }) => size + 'px'} ;\n    position:absolute;\n    overflow: hidden;\n    border-radius: 50%;\n    bottom: calc(-1 * (${({ size }) => size + 'px'} / 2));\n\tleft: calc(50% - calc(${({ size }) => size + 'px'} / 2));\n    border: 5px solid ${({ blackTheme }) => blackTheme ? '#8980f5' : '#21897e'};\n    img{\n        width: 100%;\n        height: 100%;\n    }\n\n`;","import React, { useContext } from 'react'\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ThemeContext } from '../context/ThemeContext';\nimport { sizeMedia } from '../styles/mediaQuery';\n\nexport const WhoAmIm = () => {\n    const { darkTheme } = useContext(ThemeContext);\n    return (\n        <WhoIamContainer darkTheme={darkTheme}>\n            <h3>\n                <FormattedMessage\n                    id=\"app.whoami\"\n                />\n            </h3>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia, ipsam! Vitae at dolor amet ipsum eaque consequatur eveniet enim asperiores aliquid doloremque, maxime corrupti porro iste qui esse iusto nemo.</p>\n        </WhoIamContainer>\n    )\n}\n\n\nconst WhoIamContainer = styled.div<{\n    darkTheme: boolean\n}>`\n    margin: auto;\n    margin-top:40px;\n    width: 740px;\n    padding: 30px;\n\n    @media ${sizeMedia('xs')} {\n        width: 90%;\n        padding: 1rem;\n        margin-top: 0;\n    }\n    @media ${sizeMedia('sm')} {\n        width: 90%;\n        padding: 1rem;\n        margin-top: 0;\n    }\n    h3{\n        font-size: 1.8rem;\n        color : ${({ darkTheme }) => darkTheme ? '#fff' : '#000'};\n        text-align: center;\n        margin: 1.5rem;\n    }\n    p{\n        color : ${({ darkTheme }) => darkTheme ? '#fff' : '#5A5A5A'};\n        font-weight: 400;\n    }\n`;","import styled from 'styled-components';\n\nimport { Tec } from '../interfaces/tec.interface';\nimport ReactTooltip from 'react-tooltip';\n\nexport const GridItem = ({ imageRoute, name }: Tec) => {\n\n    /* const myLoader = ({ src, width, quality }: any) => {\n        return `https://example.com/${src}?w=${width}&q=${quality || 75}`\n    } */\n\n    return (\n        <GridTec data-tip data-for={name}>\n            <img\n                src={imageRoute}\n                style={{\n                    width: '100%',\n                    height: '100%',\n                }}\n                alt={name} />\n\n            <ReactTooltip\n                id={name}\n                place=\"top\"\n                effect=\"solid\">\n\n                {name}\n\n            </ReactTooltip>\n        </GridTec>\n    )\n}\nconst GridTec = styled.div`\n    /* width: 120px;*/\n    /* border: 1px solid #cacaca; */\n    border-radius: 5px;\n    \n    @media (sizeMedia('sm')) {\n        width: 100%;\n    }\n    &:hover{\n        border-radius: 5px;\n        border: 0.5px solid #cacaca;\n        transition: .5s ease all;\n        cursor: pointer;\n    }\n`;","\nimport { Tec } from '../interfaces/tec.interface';\n\nconst Js = '/javascript.png';\nconst java = '/java.png';\nconst Git = '/git.png';\nconst html5 = '/html5.png';\nconst css3 = '/css3.png';\nconst nodejs = '/nodejs.png';\nconst angular = '/angular.png';\nconst flutter = '/flutter.png';\nconst kotlin = '/kotlin.png';\nconst sass = '/sass.png';\nconst typescript = '/typescript.png';\nconst react = '/react.png';\nconst nest = '/nest.png';\n\n\n\nexport const InfoGridsTec: Tec[] = [\n\n    {\n        imageRoute: Js,\n        name: 'Javascript'\n    },\n\n    {\n        imageRoute: typescript,\n        name: 'Typescript',\n    },\n    {\n        imageRoute: Git,\n        name: 'Git'\n    },\n    {\n        imageRoute: html5,\n        name: 'Html5'\n    },\n    {\n        imageRoute: css3,\n        name: 'Css3'\n    },\n    {\n        imageRoute: sass,\n        name: 'Sass',\n    },\n    {\n        imageRoute: nodejs,\n        name: 'Nodejs'\n    },\n    {\n        imageRoute: angular,\n        name: 'Angular',\n    },\n    {\n        imageRoute: flutter,\n        name: 'Flutter',\n    },\n    {\n        imageRoute: kotlin,\n        name: 'Kotlin',\n    },\n    {\n        imageRoute: java,\n        name: 'Java'\n    },\n    {\n        imageRoute: react,\n        name: 'React',\n    },\n    {\n        imageRoute: nest,\n        name: 'Nest',\n    },\n\n]","import React, { useContext } from 'react'\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GridItem } from './GridItem';\nimport { InfoGridsTec } from '../data/dataTec';\nimport { FormattedMessage } from 'react-intl';\nimport { ThemeColors, lightColorsTheme, darkColorsTheme, sizeDesktop } from '../context/themeColors';\nimport { ThemeContext } from '../context/ThemeContext';\nimport { sizeMedia } from '../styles/mediaQuery';\n\nexport const TecnologiesGrids = () => {\n    \n    const { darkTheme } = useContext(ThemeContext);\n    return (\n        <TecContainer id=\"tecnologies\"\n            themeColors={darkTheme ? darkColorsTheme : lightColorsTheme}\n        >\n            <h2>\n                <FormattedMessage\n                    id=\"app.technologies\"\n                />\n            </h2>\n\n            <GridContainer>\n\n                {InfoGridsTec.map((info) => (\n                    <>\n                        <GridItem\n                            imageRoute={info.imageRoute}\n                            name={info.name}\n                            key={uuidv4()}\n                        />\n                        \n                    </>\n                ))}\n\n            </GridContainer>\n\n        </TecContainer>\n    )\n}\n\ninterface Props {\n    children: React.ReactNode,\n}\nconst GridContainer = ({ children }: Props) => {\n    return (\n        <GridContainerSytyle >\n            {children}\n        </GridContainerSytyle>\n    )\n}\n\n\nconst TecContainer = styled.div<{\n    themeColors: ThemeColors\n}>`\n    background: ${({ themeColors }) => themeColors.backgroundGrids};\n    transition: .3s ease all;\n    padding: 3rem 0;\n    h2{\n        color: ${({ themeColors }) => themeColors.titleColor};\n        font-size:24px;\n        text-align: center;\n        padding-bottom: 30px;\n    }\n`;\n\nconst GridContainerSytyle = styled.div`\n    width: ${sizeDesktop};\n    margin: auto;\n    display: grid;\n    gap: 3.7rem;\n    grid-template-columns: repeat(auto-fill, minmax(4.5rem, 1fr));\n    \n    @media ${sizeMedia('xs')} {\n        width: 90%;\n    }\n    @media ${sizeMedia('sm')} {\n        width: 90%;\n    }\n`;","import React, { useContext } from 'react'\nimport styled from 'styled-components';\nimport { FormattedMessage } from 'react-intl';\nimport { darkColorsTheme, lightColorsTheme, sizeDesktop, ThemeColors } from '../context/themeColors';\n\nimport { ThemeContext } from '../context/ThemeContext';\nimport { sizeMedia } from '../styles/mediaQuery';\n\nexport const MyProjects = () => {\n    const { darkTheme } = useContext(ThemeContext)\n    return (\n        <MyProjectsStyles\n            id=\"projects\"\n            themeColors={darkTheme ? darkColorsTheme : lightColorsTheme}\n        >\n            <h2>\n                <FormattedMessage\n                    id=\"app.projects\"\n                />\n            </h2>\n            <MyProjectsGrid />\n        </MyProjectsStyles>\n    )\n}\nconst MyProjectsGrid = () => {\n    return (\n        <WorkGridContainer>\n\n            <WorksOneGrid />\n            <WorksOneGrid />\n            <WorksOneGrid />\n            <WorksOneGrid />\n            <WorksOneGrid />\n            <WorksOneGrid />\n\n        </WorkGridContainer>\n    )\n}\n\n\nconst WorksOneGrid = () => {\n    return (\n        <WorksOneGridContainer>\n            <ContainerImage src=\"https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1052&q=80\" >\n\n            </ContainerImage>\n            <h3>Lorem ipsum dolor</h3>\n            <span>Html Css Js</span>\n        </WorksOneGridContainer>\n    )\n}\n\nconst WorksOneGridContainer = styled.div`\n    width: 235px;\n    height: 300px;\n    border-radius: 5px 5px 0 0;\n    overflow: hidden;\n    text-align: center;\n    @media ${sizeMedia('xs')} {\n        width: 90%;\n        height: 100%;\n        margin: auto;\n    }\n    \n    h3{\n        font-size: 1rem;\n        color:#3895EA;\n        margin: 10px 0;\n    }\n    span{\n        margin-top: 0px;\n        font-size: 0.8rem;\n        color: #5A5A5A;\n    }\n\n`;\n\nconst MyProjectsStyles = styled.div<{\n    themeColors: ThemeColors\n}>`\n    transition: .3s ease all;\n    \n    background: ${({ themeColors }) => themeColors.backgroundGrids};\n    margin-top: 90px;\n    h2{\n        color:  ${({ themeColors }) => themeColors.titleColor};\n        padding-top: 2rem;\n        padding-bottom: 2rem;\n        text-align: center;\n    }\n`;\nconst WorkGridContainer = styled.div`\n    width: ${sizeDesktop};\n    margin:auto;\n    display: grid;\n    gap: 3.7rem;\n    grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));\n    \n    @media ${sizeMedia('xs')} {\n        width: 100%;      \n    }\n    @media ${sizeMedia('sm')} {\n        width: 90%;\n    }\n`;\n\nconst ContainerImage = styled.img`\n    width: 100%;\n    height: 235px;\n    \n    border-radius: 5px;\n    \n\n`;","\nimport { useIntl, FormattedMessage } from 'react-intl';\n\nexport const FormContact = () => {\n\n    const intl = useIntl();\n\n    const onHandleSubmit = (e: any) => {\n        e.preventDefault();\n    }\n    return (\n        <div className=\"contact\" id=\"contact\">\n            <h2>\n                <FormattedMessage\n                    id=\"app.contact\"\n                />\n            </h2>\n            <form onSubmit={onHandleSubmit}>\n                <div className=\"flex\">\n                    <input type=\"text\" placeholder={intl.formatMessage({ id: 'app.name' })} />\n                    <input type=\"email\" placeholder={intl.formatMessage({ id: 'app.email' })} />\n                </div>\n                <textarea\n                    className=\"area\"\n                    placeholder={intl.formatMessage({ id: 'app.message' })}>\n                </textarea>\n                <div className=\"button-container\">\n                    <button className=\"pointer\">\n                        <FormattedMessage\n                            id=\"app.send\"\n                        />\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import { useContext } from 'react'\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nimport { ThemeContext } from '../context/ThemeContext';\nimport { ThemeColors, lightColorsTheme, darkColorsTheme } from '../context/themeColors';\nimport { sizeMedia } from '../styles/mediaQuery';\n\nconst linkedin = '/linkedin.png';\nconst github = '/github.png';\nconst facebook = '/facebook.png';\nconst instagram = '/instagram.png';\n\nconst SocialGridData: PropsSocial[] = [\n    {\n        alt: 'Linkedin',\n        href: 'https://www.linkedin.com/in/reynaldo-gt-09a48115b/',\n        logoSource: linkedin\n    },\n    {\n        alt: 'Facebook',\n        href: 'https://www.linkedin.com/in/reynaldo-gt-09a48115b/',\n        logoSource: facebook\n    },\n    {\n        alt: 'Github',\n        href: 'https://github.com/LarzlRael',\n        logoSource: github\n    },\n    {\n        alt: 'Intragram',\n        href: 'https://www.linkedin.com/in/reynaldo-gt-09a48115b/',\n        logoSource: instagram\n    },\n]\n\nexport const Footer = () => {\n\n\n\n    const { darkTheme } = useContext(ThemeContext);\n\n    return (\n        <FooterContainer\n            themeColors={darkTheme ? darkColorsTheme : lightColorsTheme}\n        >\n            <SocialMediaContainer>\n\n                {\n                    SocialGridData.map((social) => (\n                        <a target=\"blank\"\n                            key={uuidv4()}\n                            href={social.href}>\n                            <SocialGrid\n                                logoSource={social.logoSource}\n                                href={social.href} />\n                        </a>\n                    ))\n                }\n            </SocialMediaContainer>\n        </FooterContainer>\n    )\n}\n\ninterface PropsSocial {\n    href: string;\n    logoSource: string;\n    alt?: string;\n};\nconst SocialGrid = ({ logoSource, alt }: PropsSocial) => {\n    return (\n        <div className=\"social\">\n            {/* <a target=\"blank\"\n                href={href}> */}\n            <img src={logoSource} alt={alt} />\n            {/* </a> */}\n        </div>\n    )\n}\n\nconst FooterContainer = styled.footer<{\n    themeColors: ThemeColors,\n}>`\n    margin-top: 3rem;\n    height: 100px;\n    background-color: #1E2B38;\n    \n    display: flex;\n    align-items: center;\n\n    @media ${sizeMedia('xs')} {\n        padding: 1.5rem;  \n        height: auto;\n    }\n`;\nconst SocialMediaContainer = styled.div`\n    \n    margin:auto;\n    display: grid;\n    gap: 2rem;\n    width: 300px;\n    align-items: center;\n    justify-items: center;\n    \n    grid-template-columns: repeat(auto-fill, minmax(2.5rem, 1fr));\n\n    @media (max-width: 360px) {\n        width: 100%;\n    }\n    \n\n`;","import React, { useContext } from 'react';\n\n\nimport { Header } from './Header';\nimport { WhoAmIm } from '../WhoAmIm';\nimport { TecnologiesGrids } from '../TecnologiesGrids';\nimport { MyProjects } from '../MyProjects';\nimport { FormContact } from '../FormContact';\nimport { darkColorsTheme, lightColorsTheme, ThemeColors } from '../../context/themeColors';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { Footer } from '../Footer';\nimport styled from 'styled-components';\nimport { sizeMedia } from '../../styles/mediaQuery';\n\n\n\ninterface LayoutProps {\n    children: React.ReactNode,\n}\nexport const Layout = ({ children }: LayoutProps) => {\n    const { darkTheme } = useContext(ThemeContext);\n    return (\n        <>\n            <MainLayout darkTheme={darkTheme}\n                themeColors={darkTheme ? darkColorsTheme : lightColorsTheme}>\n                <Header />\n            </MainLayout>\n            <WhoAmIm />\n            <TecnologiesGrids />\n\n            <MyProjects />\n            <FormContact />\n            <Footer />\n        </>\n    )\n}\n\n\nconst MainLayout = styled.div<{\n    darkTheme: boolean,\n    themeColors: ThemeColors,\n}>`\n    width: 100%;\n    background:url('https://images.unsplash.com/photo-1488590528505-98d2b5aba04b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80') center/cover;\n    position: relative;\n\n    &:before {\n        content:\"\";\n        position: absolute;\n        background-color: ${({ themeColors }) => themeColors.primaryColor} ;\n        opacity: 0.6;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n    \n    @media ${sizeMedia('xs')} {\n        width: 100vw;\n        height: 100vh;\n    }\n`;\n","import  { useContext } from 'react';\n\nimport './App.css';\nimport { ThemeContext } from './context/ThemeContext';\n\nimport { Layout } from './components/Layouts/Layout';\nimport { ThemeColors, darkColorsTheme, lightColorsTheme } from './context/themeColors';\nimport styled from 'styled-components';\n\nfunction App() {\n\n  const { darkTheme } = useContext(ThemeContext);\n  \n  return (\n    <BackGroundColor\n      themeColors={darkTheme ? darkColorsTheme : lightColorsTheme}\n    >\n\n      <Layout>\n      </Layout>\n\n    </BackGroundColor >\n  );\n}\n\nexport default App;\n\n\nconst BackGroundColor = styled.div<{\n  themeColors: ThemeColors\n}>`\n  background: ${({ themeColors }) => themeColors.background};\n  transition:.3s ease all;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/globals.scss';\n\nimport App from './App';\nimport { ThemeProvider } from './context/ThemeContext';\nimport { LangProvider } from './context/langContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <LangProvider>\n\n        <App />\n\n      </LangProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}